"""
Django settings for ecom project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
CSRF_COOKIE_SECURE = True


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(pzsummg#yc^%rgvx#b_k=m#q8ea5+=kx*obnd$u2jh79+rn8y'

# SECURITY WARNING: don't run with debug turned on in production!

# Django | Error Exception Handling - 404 500 Errors 3/3
DEBUG = True

ALLOWED_HOSTS = []
# Django | Error Exception Handling - 404 500 Errors 3/3 __END
# Django | Error Exception Handling - 404 500 Errors __END
# next step : Django | Authentication ( JWT, Login, Register, Profile ) in settings.py

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'accounts',
    'rest_framework',
    'django_filters',

    # 'rest_framework.authtoken',

    # #Django | Authentication ( JWT, Login, Register, Profile ) 1/13
    'rest_framework_simplejwt',
    # #Django | Authentication ( JWT, Login, Register, Profile ) 1/13
    # #Django | Authentication ( JWT, Login, Register, Profile ) 2/13  in views.py

    # Django | Order Model, Order Item Model in order application 1/12
    'order',
    # Django | Order Model, Order Item Model in order application 1/12 __END
    # Django | Order Model, Order Item Model in order application 2/12 in models.py/order
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Email Mailtrap - UserProfile, Forgot Reset Password 1/
# EMAIL_BACKEND='django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# https://mailtrap.io/inboxes/2707682/messages :
EMAIL_HOST = 'sandbox.smtp.mailtrap.io'
EMAIL_HOST_USER = '12340328e62912'
EMAIL_HOST_PASSWORD = '85595fac4542bb'
EMAIL_PORT = '2525'
# # for localhost:
# EMAIL_USE_TLS = False
# EMAIL_USE_SSL = False
#  Email Mailtrap - UserProfile, Forgot Reset Password 1/ __END
#  Email Mailtrap - UserProfile, Forgot Reset Password 2/ in views.py/account


ROOT_URLCONF = 'ecom.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecom.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "ecom_db",
        "USER":"root",
        "PASSWORD": "",
        'HOST': 'localhost',  
        'PORT': "",  

    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
#Adjust static settings/1
STATICFILES_DIRS=[BASE_DIR/'static']
#END Adjust static settings/1

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {

    #Django | Authentication ( JWT, Login, Register, Profile ) 2/13
    'DEFAULT_AUTHENTICATION_CLASSES':(
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        # 'rest_framework.authentication.TokenAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
    ),
    #Django | Authentication ( JWT, Login, Register, Profile ) 2/13
    #Django | Authentication ( JWT, Login, Register, Profile ) 3/13  in settings.py

    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    # ],
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        
    ),

}
    #Django | Authentication ( JWT, Login, Register, Profile ) 3/13

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME":timedelta(days=15),
    "REFRESH_TOKEN_LIFETIME":timedelta(days=1),
    "BLACKLIST_AFTER_ROTATION":True,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_TOKEN_CLASSES":("rest_framework_simplejwt.tokens.AccessToken",),
}
    #Django | Authentication ( JWT, Login, Register, Profile ) 3/13
    #Django | Authentication ( JWT, Login, Register, Profile ) 4/13 : create a new app named : accounts then registerd in INSTALLED_APPS list in settings.py
    #Django | Authentication ( JWT, Login, Register, Profile ) 5/13   in accounts app => create serializer file
 